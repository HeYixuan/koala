<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.igetwell.system.mapper.SystemDeptMapper">
  <resultMap id="baseMap" type="org.igetwell.system.entity.SystemDept">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="TENANT_ID" jdbcType="VARCHAR" property="tenantId" />
    <result column="PARENT_ID" jdbcType="BIGINT" property="parentId" />
    <result column="ANCESTORS" jdbcType="VARCHAR" property="ancestors" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="FULL_NAME" jdbcType="VARCHAR" property="fullName" />
    <result column="SORT" jdbcType="INTEGER" property="sort" />
  </resultMap>

  <resultMap id="treeMap" type="org.igetwell.system.vo.DeptTree">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="PARENT_ID" jdbcType="BIGINT" property="parentId" />
    <result column="TENANT_ID" jdbcType="VARCHAR" property="tenantId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="FULL_NAME" jdbcType="VARCHAR" property="fullName" />
    <result column="SORT" jdbcType="INTEGER" property="sort" />
  </resultMap>

  <sql id="baseSql">
    ID, TENANT_ID, PARENT_ID, ANCESTORS, NAME, FULL_NAME, SORT
  </sql>
  <sql id="treeSql">
    ID, TENANT_ID, PARENT_ID, NAME, FULL_NAME, SORT
  </sql>

  <select id="getList" resultMap="treeMap" parameterType="java.lang.String">
    SELECT
        <include refid="treeSql" />
    FROM SYS_DEPT
    <if test="tenantId != null and tenantId != ''">
      TENANT_ID = #{tenantId,jdbcType=VARCHAR},
    </if>
  </select>

  <select id="getDeptAncestors" resultType="java.lang.Long" parameterType="java.lang.Long">
    SELECT ID FROM SYS_DEPT WHERE ANCESTORS LIKE CONCAT('%', #{deptId}, '%')
  </select>

  <select id="getAncestors" resultType="java.lang.Long" parameterType="java.lang.Long">
    SELECT CHILD FROM SYS_DEPT_RELATION WHERE PARENT = #{deptId}
  </select>

  <delete id="deleteById" parameterType="java.lang.Long">
    DELETE FROM SYS_DEPT WHERE ID = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="org.igetwell.system.entity.SystemDept">
    INSERT INTO SYS_DEPT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="tenantId != null and tenantId != ''">
        TENANT_ID,
      </if>
      <if test="parentId != null">
        PARENT_ID,
      </if>
      <if test="ancestors != null and ancestors != ''">
        ANCESTORS,
      </if>
      <if test="name != null and name !=''">
        NAME,
      </if>
      <if test="fullName != null and fullName != ''">
        FULL_NAME,
      </if>
      <if test="sort != null">
        SORT,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null and tenantId != ''">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="ancestors != null and ancestors != ''">
        #{ancestors,jdbcType=VARCHAR},
      </if>
      <if test="name != null and name != ''">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null and fullName != ''">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="org.igetwell.system.entity.SystemDept">
    UPDATE SYS_DEPT
    <set>
      <if test="tenantId != null and tenantId != ''">
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        PARENT_ID = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="ancestors != null">
        ANCESTORS = #{ancestors,jdbcType=VARCHAR},
      </if>
      <if test="name != null and name != ''">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null and fullName != ''">
        FULL_NAME = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        SORT = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>

</mapper>